service: boid-backend

useDotenv: true

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  profile: boid-user
  region: us-east-2
  apiGateway:
    apiKeys:
      - name: 'boid-api-key'
        value: 'MQ3sGdC@82Jmw*TX9e-P'

functions:
  register:
    handler: handler.register
    environment:
      MONGODB_URI: ${env:MONGODB_URI}
      BCRYPT_SALT: ${env:BCRYPT_SALT}
    events:
      - http:
          method: post
          path: /register
          private: true
          cors: true
  login:
    handler: handler.login
    environment:
      MONGODB_URI: ${env:MONGODB_URI}
      SECRET_JWT: ${env:SECRET_JWT}
    events:
      - http:
          method: post
          path: /login
          private: true
          cors: true
  verify:
    handler: handler.verify
    environment:
      MONGODB_URI: ${env:MONGODB_URI}
      SECRET_JWT: ${env:SECRET_JWT}
    events:
      - http:
          method: get
          path: /verify
          private: true
          cors: true
  request:
    handler: handler.request
    environment:
      MONGODB_URI: ${env:MONGODB_URI}
      SECRET_JWT: ${env:SECRET_JWT}
    events:
      - http:
          method: post
          path: /request
          private: true
          cors: true
  createConversation:
    handler: handler.createConversation
    environment:
      MONGODB_URI: ${env:MONGODB_URI}
      SECRET_JWT: ${env:SECRET_JWT}
    events:
      - http:
          method: post
          path: /conversation
          private: true
          cors: true
  deleteConversation:
    handler: handler.deleteConversation
    environment:
      MONGODB_URI: ${env:MONGODB_URI}
      SECRET_JWT: ${env:SECRET_JWT}
    events:
      - http:
          method: delete
          path: /conversation
          private: true
          cors: true
  getConversations:
    handler: handler.getConversations
    environment:
      MONGODB_URI: ${env:MONGODB_URI}
      SECRET_JWT: ${env:SECRET_JWT}
    events:
      - http:
          method: get
          path: /conversations
          private: true
          cors: true
  getRequests:
    handler: handler.getRequests
    environment:
      MONGODB_URI: ${env:MONGODB_URI}
      SECRET_JWT: ${env:SECRET_JWT}
    events:
      - http:
          method: get
          path: /requests
          private: true
          cors: true
          
resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'